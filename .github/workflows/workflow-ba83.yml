# Python on Linux Web App
# Build a Python project (using Django/Flask/Bottle frameworks) and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
on:
  push:
    branches:
      - main

name: Build and deploy Python app
jobs:
 build:
  runs-on: ubuntu-latest
  steps:
  # checkout the repo 
  - uses: actions/checkout@master

  # setup python
  - name: Setup Python
    uses: actions/setup-python@v1
    with:
     python-version: 3.8

  # install dependencies
  - name: python install
    working-directory: . 
    run: |
     sudo apt install python3.8-venv
     python -m venv --copies antenv
     source antenv/bin/activate
     pip install setuptools
     pip install -r requirements.txt

  # upload the artifacts
  - name: Upload artifact for deployment jobs
    uses: actions/upload-artifact@v2
    with:
      name: webapp
      path: |
        .
        !venv/

 deploy:
  runs-on: ubuntu-latest
  needs: build
  steps:
  # Download artifacts
  - name: Download artifact from build job
    uses: actions/download-artifact@v2
    with:
      name: webapp
      path: .

  # Azure login
  - uses: azure/login@v1
    with:
     creds: ${{ secrets.flower_stuff_easy_web_django_ba83 }}

  - uses: azure/appservice-settings@v1
    with:
     app-name: flower-stuff-easy-web-django
     mask-inputs: false
     general-settings-json: '{"linuxFxVersion": "PYTHON|3.8"}' #'General configuration settings as Key Value pairs'
     app-settings-json: '[{ "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "true" }]'

  # deploy web app
  - uses: azure/webapps-deploy@v2
    with:
     app-name: flower-stuff-easy-web-django
     package: .
     startup-command: AZURE_CREDENTIALS

  # Azure logout
  - name: logout
    run: |
     az logout